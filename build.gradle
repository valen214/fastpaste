


buildscript {
    ext.kotlin_version = "1.3.21"

    repositories {
        google()
        jcenter()
        /*
        flatDir {
            dirs "C:/Program Files/Android/Android Studio/lib"
        }
        */
    }
    dependencies {
        classpath "com.android.tools.build:gradle:3.3.1"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

plugins {
    // id "org.jetbrains.kotlin.jvm" version "1.3.21"
}

apply plugin: "com.android.application"
apply plugin: "kotlin-android"



android {
    // android.sdkDirectory = "$sdk_dir" // read-only
    // shorter than .toString()
    assert "${properties.sdkDirectory}" == System.getenv("ANDROID_SDK_HOME")

    applicationVariants.all{ variant ->
        println("variant: ${variant.getPackageApplicationProvider().get().outputs.files[1]}")
    }

    compileSdkVersion 28
    buildToolsVersion "28.0.3"

    defaultConfig {
        applicationId "com.randommain.fastpaste"
        minSdkVersion 11
        targetSdkVersion 28
        // versionCode 1
        // versionName "1.0"
    }

    signingConfigs {
        release {
// keytool -genkeypair -validity 365 -keystore bin\key.keystore -keyalg RSA -keysize 2048
            storeFile file("bin/key.keystore")
            storePassword "TemporaryPassword"
            keyAlias "mykey"
            keyPassword "TemporaryPassword"
        }
    }
    buildTypes {
        release  {
            signingConfig signingConfigs.release

            minifyEnabled true
            proguardFiles getDefaultProguardFile("proguard-android.txt")
        }
    }

    sourceSets {
        main {
            setRoot "src"
            kotlin.srcDirs = ["src"]
            java.srcDirs = ["src"]
            res.srcDirs = ["res"]
            manifest.srcFile "AndroidManifest.xml"

            // buildDir = "bin"
        }
    }
}

repositories {
    google()
    jcenter()
}
dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}

task cleanApk(type: Delete){
    delete "bin/app.apk"
}
clean.dependsOn(cleanApk)